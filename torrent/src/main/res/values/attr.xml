<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="dynamic_style_attrs">
        <attr name="smallText" format="reference" />
        <attr name="background" format="reference" />
        <attr name="backgroundBlank" format="reference" />
        <attr name="popupTheme" format="reference" />
        <attr name="divider" format="reference" />
        <attr name="defaultRectRipple" format="reference" />
        <attr name="defaultRoundRipple" format="reference" />
        <attr name="defaultSelectRect" format="reference" />
        <attr name="curOpenTorrentIndicator" format="reference" />
    </declare-styleable>

    <declare-styleable name="Theme">
        <attr name="morphButtonStyle" format="reference"/>
    </declare-styleable>

    <attr name="vc_tintMode" format="enum">
        <!-- The tint is drawn on top of the drawable.
             [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] -->
        <enum name="src_over" value="3" />
        <!-- The tint is masked by the alpha channel of the drawable. The drawable’s
             color channels are thrown out. [Sa * Da, Sc * Da] -->
        <enum name="src_in" value="5" />
        <!-- The tint is drawn above the drawable, but with the drawable’s alpha
             channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] -->
        <enum name="src_atop" value="9" />
        <!-- Multiplies the color and alpha channels of the drawable with those of
             the tint. [Sa * Da, Sc * Dc] -->
        <enum name="multiply" value="14" />
        <!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
        <enum name="screen" value="15" />
        <!-- Combines the tint and drawable color and alpha channels, clamping the
             result to valid color values. Saturate(S + D) -->
        <enum name="add" value="16" />
    </attr>
    <attr name="vc_autoMirrored" format="boolean"/>
    <attr name="vc_tint" format="color"/>
    <attr name="vc_pathData" format="string" />

    <!-- ========================== -->
    <!-- ValueAnimator class attributes -->
    <!-- ========================== -->
    <eat-comment />
    <declare-styleable name="Animator">
        <!-- Defines the interpolator used to smooth the animation movement in time. -->
        <attr name="android:interpolator" />
        <!-- Amount of time (in milliseconds) for the animation to run. -->
        <attr name="android:duration" />
        <!-- Delay in milliseconds before the animation runs, once start time is reached. -->
        <attr name="android:startOffset"/>
        <!-- Defines how many times the animation should repeat. The default value is 0. -->
        <attr name="android:repeatCount" />
        <!-- Defines the animation behavior when it reaches the end and the repeat count is
             greater than 0 or infinite. The default value is restart. -->
        <attr name="android:repeatMode" />
        <!-- Value the animation starts from. -->
        <attr name="android:valueFrom" />
        <!-- Value the animation animates to. -->
        <attr name="android:valueTo" />
        <!-- The type of valueFrom and valueTo. -->
        <attr name="vc_valueType">
            <!-- valueFrom and valueTo are floats. This is the default value is valueType is
                 unspecified. Note that if either valueFrom or valueTo represent colors
                 (beginning with "#"), then this attribute is ignored and the color values are
                 interpreted as integers. -->
            <enum name="floatType" value="0" />
            <!-- valueFrom and valueTo are integers. -->
            <enum name="intType"   value="1" />
            <!-- valueFrom and valueTo are paths defined as strings.
                 This type is used for path morphing in AnimatedVectorDrawable. -->
            <enum name="pathType"   value="2" />
        </attr>
    </declare-styleable>

    <!-- ========================== -->
    <!-- ObjectAnimator class attributes -->
    <!-- ========================== -->
    <eat-comment />
    <declare-styleable name="PropertyAnimator">
        <!-- Name of the property being animated. -->
        <attr name="android:propertyName" />
        <!-- The path used to animate the properties in the ObjectAnimator -->
        <attr name="vc_pathData"/>
    </declare-styleable>
</resources>
